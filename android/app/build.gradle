plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

// 在 android 代码块之前将你 properties 文件的密钥库信息添加进去
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace = "com.swm.freader_music_player"
    compileSdkVersion 34
    // ndkVersion flutter.ndkVersion
    ndkVersion = "25.1.8937393"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    // device_info_plus 升级依赖 https://github.com/fluttercommunity/plus_plugins/issues/3303
    // compileOptions {
    //   sourceCompatibility JavaVersion.VERSION_17
    //   targetCompatibility JavaVersion.VERSION_17
    // }

    // kotlinOptions {
    //     jvmTarget = JavaVersion.VERSION_17
    // }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.swm.freadermediaplayer"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        // minSdkVersion flutter.minSdkVersion

        minSdkVersion 23
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    // buildTypes {
    //     release {
    //         // TODO: Add your own signing config for the release build.
    //         // Signing with the debug keys for now, so `flutter run --release` works.
    //         signingConfig signingConfigs.debug
    //     }
    // }
    // 找到 buildTypes 代码块替换为以下配置内容，现在 app 的发布版本就会被自动签名了。
    signingConfigs {
       release {
           keyAlias keystoreProperties['keyAlias']
           keyPassword keystoreProperties['keyPassword']
           storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
           storePassword keystoreProperties['storePassword']
       }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }


    // 2024-01-13（？？？没有成功，也没处理了）自定义打包的apk名称，参看
    // https://github.com/flutter/flutter/issues/29509#issuecomment-648044290
    // https://www.geeksforgeeks.org/how-to-change-the-default-generated-apk-name-in-android-studio/

    // 可能是添加了 split参数`flutter build apk --split-per-abi`,
    // 不添加可以build成功，`flutter build apk` 或 `flutter build apk --debug/release`，虽然终端log显示的名称没变
    // 在 build/app/outputs/apk/release；但这样就是一个体积大的安装包
    // fmp-player_release_0.2.1-beta.apk
    // buildTypes {
    //     release {
    //         signingConfig signingConfigs.release
    //          // 2024-01-12 测试指定打包apk的应用名称
    //         applicationVariants.all { variant ->
    //         variant.outputs.all {
    //             def version = variant.versionName // 版本号
    //             def buildType = variant.name // 包类型，debug 还是 release
    //             outputFileName = "fmp-player_${buildType}_${version}.apk"

    //             // def createTime = new Date().format('yyyy_MM_dd_HH_mm_ss') // 打包时间
    //             // outputFileName = "fmp-player_${buildType}_${version}_${createTime}.apk"
    //             }
    //         }
    //     }
    // }
   
}

flutter {
    source '../..'
}
